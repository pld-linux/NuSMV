--- NuSMV-2.5.2/nusmv/doc/tutorial/Makefile.am~	2010-10-29 13:15:50.000000000 +0200
+++ NuSMV-2.5.2/nusmv/doc/tutorial/Makefile.am	2011-04-06 11:37:20.223970540 +0200
@@ -101,12 +101,12 @@
 
 if HAVE_PDFLATEXETAL
 install-data-local: tutorial.pdf
-	$(install_sh_DATA) tutorial.pdf $(datadir)/nusmv/doc/tutorial.pdf
+	$(install_sh_DATA) tutorial.pdf $(DESTDIR)$(datadir)/nusmv/doc/tutorial.pdf
 
 else
 if HAVE_LATEX
 install-data-local: tutorial.ps
-	$(install_sh_DATA) tutorial.ps $(datadir)/nusmv/doc/tutorial.ps
+	$(install_sh_DATA) tutorial.ps $(DESTDIR)$(datadir)/nusmv/doc/tutorial.ps
 
 else 
 install-data-local:
--- NuSMV-2.5.2/nusmv/doc/user-man/Makefile.am~	2010-10-29 13:15:50.000000000 +0200
+++ NuSMV-2.5.2/nusmv/doc/user-man/Makefile.am	2011-04-06 11:38:19.714970540 +0200
@@ -121,11 +121,11 @@
 
 if HAVE_PDFLATEXETAL
 install-data-local: nusmv.pdf
-	$(install_sh_DATA) nusmv.pdf $(datadir)/nusmv/doc/nusmv.pdf
+	$(install_sh_DATA) nusmv.pdf $(DESTDIR)$(datadir)/nusmv/doc/nusmv.pdf
 else
 if HAVE_LATEX
 install-data-local: nusmv.ps
-	$(install_sh_DATA) nusmv.ps $(datadir)/nusmv/doc/nusmv.ps
+	$(install_sh_DATA) nusmv.ps $(DESTDIR)$(datadir)/nusmv/doc/nusmv.ps
 else 
 install-data-local:
 	@echo Cannot generate manual: latex not found
diff -ur NuSMV-2.4.0/nusmv/helpers/extract_doc.in NuSMV-2.4.0-ok/nusmv/helpers/extract_doc.in
--- NuSMV-2.4.0/nusmv/helpers/extract_doc.in	2005-03-03 13:12:59.000000000 +0100
+++ NuSMV-2.4.0-ok/nusmv/helpers/extract_doc.in	2006-10-03 17:29:10.000000000 +0200
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/bin/bash
 
 # FileName	[ extract_doc.in ]
 #
--- NuSMV-2.4.3/cudd-2.4.1.1/Makefile.orig	2007-05-10 19:37:13.000000000 +0200
+++ NuSMV-2.4.3/cudd-2.4.1.1/Makefile	2007-09-14 15:33:55.000000000 +0200
@@ -55,7 +55,7 @@
 # These four are typical settings for optimized code with gcc.  The
 # last two also work with icc/ecc.
 #ICFLAGS	= -g -O6 -Wall
-ICFLAGS	= -g -O6
+#ICFLAGS	= -g -O6
 #ICFLAGS	= -g -O3 -Wall
 #ICFLAGS	= -g -O3
 
@@ -69,7 +69,7 @@
 # Gcc 2.8.1 or higher on i686.
 #XCFLAGS	= -mcpu=pentiumpro -malign-double -DHAVE_IEEE_754 -DBSD
 # Gcc 3.2.2 or higher on i686.
-XCFLAGS	= -mcpu=pentium4 -malign-double -DHAVE_IEEE_754 -DBSD -DNUSMV_SIZEOF_VOID_P=4 -DNUSMV_SIZEOF_LONG=4 -DNUSMV_SIZEOF_INT=4
+XCFLAGS	= -malign-double -DHAVE_IEEE_754 -DBSD -DNUSMV_SIZEOF_VOID_P=4 -DNUSMV_SIZEOF_LONG=4 -DNUSMV_SIZEOF_INT=4
 # Icc on i686.
 #XCFLAGS	= -ansi -align -ip -DHAVE_IEEE_754 -DBSD
 # Gcc on ia64.
--- NuSMV-2.4.3/cudd-2.4.1.1/Makefile_64bit~	2007-03-14 11:31:56.000000000 +0100
+++ NuSMV-2.4.3/cudd-2.4.1.1/Makefile_64bit	2007-09-14 15:35:25.000000000 +0200
@@ -55,7 +55,7 @@
 # These four are typical settings for optimized code with gcc.  The
 # last two also work with icc/ecc.
 #ICFLAGS	= -g -O6 -Wall
-ICFLAGS	= -g -O6
+#ICFLAGS	= -g -O6
 #ICFLAGS	= -g -O3 -Wall
 #ICFLAGS	= -g -O3
 
--- NuSMV-2.5.2/nusmv/configure.ac~	2010-10-29 13:15:51.000000000 +0200
+++ NuSMV-2.5.2/nusmv/configure.ac	2011-04-06 11:49:45.772970540 +0200
@@ -4,6 +4,8 @@
 
 AC_INIT(NuSMV, 2.5.2, nusmv-users@fbk.eu)
 
+AC_CONFIG_MACRO_DIR([m4])
+
 # where to look for install.sh and other helpers
 AC_CONFIG_AUX_DIR(helpers)
 
--- NuSMV-2.5.2/nusmv/configure.ac~	2011-04-06 12:14:21.103822539 +0200
+++ NuSMV-2.5.2/nusmv/configure.ac	2011-04-06 12:29:40.711202079 +0200
@@ -669,11 +669,11 @@
 done
 
 dep_addons=
-function addon_calc_dep() # calculates dependencies of given addon
+addon_calc_dep() # calculates dependencies of given addon
 {
   addon=$1
   __addon_deps=${addon}_deps
-  deps=${!__addon_deps}
+  eval deps=\$${__addon_deps}
   
   for dep in $deps; do
     _tmp=$(echo "$dep_addons $found_addons $alias_addons" | grep -w $dep -) # already taken?
@@ -729,7 +729,7 @@
 # Outputs 
 for addon in $all_addons; do
   _vname=have_addon_${addon}
-  _have_addon=${!_vname}
+  eval _have_addon=\$${_vname}
   case $addon in
   compass) 
     if test $_have_addon == 1; then 
--- NuSMV-2.5.2/nusmv/helpers/extract_doc.in~	2011-04-06 12:42:33.778202079 +0200
+++ NuSMV-2.5.2/nusmv/helpers/extract_doc.in	2011-04-06 12:47:12.111202081 +0200
@@ -126,7 +126,7 @@
 
 
 
-function extractcommand() {
+extractcommand() {
     cfile=$1
     htmldir=$2
 
--- NuSMV-2.5.4/MiniSat/minisat/simp/SimpSolver.C~	2015-12-12 22:07:12.000000000 +0100
+++ NuSMV-2.5.4/MiniSat/minisat/simp/SimpSolver.C	2015-12-12 22:09:59.149163015 +0100
@@ -37,7 +37,7 @@ SimpSolver::SimpSolver() :
   , bwdsub_assigns     (0)
 {
     vec<Lit> dummy(1,lit_Undef);
-    bwdsub_tmpunit   = Clause_new(dummy);
+    bwdsub_tmpunit   = Clause::Clause_new(dummy);
     remove_satisfied = false;
 }
 
--- NuSMV-2.5.4/MiniSat/minisat/core/SolverTypes.h~	2006-11-10 22:54:30.000000000 +0100
+++ NuSMV-2.5.4/MiniSat/minisat/core/SolverTypes.h	2015-12-12 22:14:08.982282692 +0100
@@ -119,7 +119,7 @@ public:
 
     // -- use this function instead:
     template<class V>
-    friend Clause* Clause_new(const V& ps, bool learnt = false) {
+    static Clause* Clause_new(const V& ps, bool learnt = false) {
         assert(sizeof(Lit)      == sizeof(uint32_t));
         assert(sizeof(float)    == sizeof(uint32_t));
         void* mem = malloc(sizeof(Clause) + sizeof(uint32_t)*(ps.size()));
--- NuSMV-2.5.4/MiniSat/minisat/simp/SimpSolver.C~	2015-12-12 22:14:47.000000000 +0100
+++ NuSMV-2.5.4/MiniSat/minisat/simp/SimpSolver.C	2015-12-12 22:16:31.295964939 +0100
@@ -489,7 +489,7 @@ bool SimpSolver::eliminateVar(Var v, boo
     elimtable[v].order = elimorder++;
     assert(elimtable[v].eliminated.size() == 0);
     for (int i = 0; i < cls.size(); i++){
-        elimtable[v].eliminated.push(Clause_new(*cls[i]));
+        elimtable[v].eliminated.push(Clause::Clause_new(*cls[i]));
         removeClause(*cls[i]); }
 
     // Produce clauses in cross product:
--- NuSMV-2.5.4/MiniSat/minisat/core/Solver.C~	2015-12-12 22:16:49.000000000 +0100
+++ NuSMV-2.5.4/MiniSat/minisat/core/Solver.C	2015-12-12 22:17:47.084605634 +0100
@@ -114,7 +114,7 @@ bool Solver::addClause(vec<Lit>& ps)
         uncheckedEnqueue(ps[0]);
         return ok = (propagate() == NULL);
     }else{
-        Clause* c = Clause_new(ps, false);
+        Clause* c = Clause::Clause_new(ps, false);
         clauses.push(c);
         attachClause(*c);
     }
@@ -598,7 +598,7 @@ lbool Solver::search(int nof_conflicts,
             if (learnt_clause.size() == 1){
                 uncheckedEnqueue(learnt_clause[0]);
             }else{
-                Clause* c = Clause_new(learnt_clause, true);
+                Clause* c = Clause::Clause_new(learnt_clause, true);
                 learnts.push(c);
                 attachClause(*c);
                 claBumpActivity(*c);
